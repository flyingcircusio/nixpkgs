Based on a combination of upstream 049de62730f4954ef9a642f2eeebbca30a8eccdc
and 5e16e2d1c9fe245e4c17005d779fde91ec0b9c05, irrelevant hunks trimmed out by ris
to allow it to apply to 4.5.1.

diff --git a/libr/bin/format/pyc/marshal.c b/libr/bin/format/pyc/marshal.c
index d9b1b4b2f64..9897e34a1d9 100644
--- a/libr/bin/format/pyc/marshal.c
+++ b/libr/bin/format/pyc/marshal.c
@@ -1137,7 +1135,9 @@ static pyc_object *get_object(RBuffer *buffer) {
 	}
 
-	if (flag) {
-		free_object (ref_idx->data);
+	if (flag && ref_idx) {
+		if (ref_idx->data != ret) {
+			free_object (ref_idx->data);
+		}
 		ref_idx->data = copy_object (ret);
 	}
 	return ret;

@@ -1190,10 +1190,10 @@ static bool extract_sections_symbols(pyc_object *obj, RList *sections, RList *sy
 	symbol->paddr = cobj->start_offset;
 	symbol->ordinal = symbols_ordinal++;
 	if (cobj->consts->type != TYPE_TUPLE && cobj->consts->type != TYPE_SMALL_TUPLE) {
-		goto fail;
+		goto fail2;
 	}
 	if (!r_list_append (symbols, symbol)) {
-		goto fail;
+		goto fail2;
 	}
 	r_list_foreach (((RList *)(cobj->consts->data)), i, obj) {
 		extract_sections_symbols (obj, sections, symbols, cobjs, prefix);
@@ -1201,11 +1201,14 @@ static bool extract_sections_symbols(pyc_object *obj, RList *sections, RList *sy
 	free (prefix);
 	return true;
 fail:
-
 	free (section);
 	free (prefix);
 	free (symbol);
 	return false;
+fail2:
+	free (prefix);
+	free (symbol);
+	return false;
 }
 
 bool get_sections_symbols_from_code_objects(RBuffer *buffer, RList *sections, RList *symbols, RList *cobjs, ut32 magic) {
diff --git a/libr/bin/p/bin_pyc.c b/libr/bin/p/bin_pyc.c
index 556fec88d45..068dd9f1011 100644
--- a/libr/bin/p/bin_pyc.c
+++ b/libr/bin/p/bin_pyc.c
@@ -106,7 +106,7 @@ static RList *symbols(RBinFile *arch) {
 	r_list_append (shared, cobjs);
 	r_list_append (shared, interned_table);
 	arch->o->bin_obj = shared;
-	RList *sections = r_list_newf ((RListFree)free);
+	RList *sections = r_list_newf (NULL); // (RListFree)free);
 	if (!sections) {
 		r_list_free (shared);
 		arch->o->bin_obj = NULL;
